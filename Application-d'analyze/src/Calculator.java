/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */



import test.Metrics.*;

import java.awt.BorderLayout;
import java.awt.Insets;
import java.io.File;
import java.io.FileFilter;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;
import raven.chart.ModelChart;

/**
 *
 * @author Mimo
 */
public class Calculator extends javax.swing.JFrame {
    private JFileChooser jf;
    private FileFilter filter;
    public Test t;

    /**
     *
     */
    public File f;
    private String s;
    public Set<Integer> choice= new HashSet<>();
    /**
     * Creates new form Calculator
     */
    public Calculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelShadow1 = new raven.panel.PanelShadow();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        metrique1 = new javax.swing.JRadioButton();
        metrique2 = new javax.swing.JRadioButton();
        metrique3 = new javax.swing.JRadioButton();
        metrique5 = new javax.swing.JRadioButton();
        metrique4 = new javax.swing.JRadioButton();
        metrique7 = new javax.swing.JRadioButton();
        metrique6 = new javax.swing.JRadioButton();
        calculateButton = new javax.swing.JButton();
        calculateButton1 = new javax.swing.JButton();
        classSelectedLabel = new javax.swing.JLabel();
        metrique8 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelShadow1.setBackground(new java.awt.Color(34, 59, 68));
        panelShadow1.setColorGradient(new java.awt.Color(17, 37, 45));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Monospaced", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("OO-Test-Metric-Calculator");

        metrique1.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        metrique1.setForeground(new java.awt.Color(34, 59, 68));
        metrique1.setText("Number Of Handled Exceptions");
        metrique1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metrique1ActionPerformed(evt);
            }
        });

        metrique2.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        metrique2.setForeground(new java.awt.Color(34, 59, 68));
        metrique2.setText("Number of imports per class");
        metrique2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metrique2ActionPerformed(evt);
            }
        });

        metrique3.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        metrique3.setForeground(new java.awt.Color(34, 59, 68));
        metrique3.setText("Number of effective imports per class ");
        metrique3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metrique3ActionPerformed(evt);
            }
        });

        metrique5.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        metrique5.setForeground(new java.awt.Color(34, 59, 68));
        metrique5.setText("Number of Used Imported Methods");
        metrique5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metrique5ActionPerformed(evt);
            }
        });

        metrique4.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        metrique4.setForeground(new java.awt.Color(34, 59, 68));
        metrique4.setText("Number of Implemented Interfaces");
        metrique4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metrique4ActionPerformed(evt);
            }
        });

        metrique7.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        metrique7.setForeground(new java.awt.Color(34, 59, 68));
        metrique7.setText("Number of external imports ");
        metrique7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metrique7ActionPerformed(evt);
            }
        });

        metrique6.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        metrique6.setForeground(new java.awt.Color(34, 59, 68));
        metrique6.setText("Number of Instanciable Variables");
        metrique6.setToolTipText("");
        metrique6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metrique6ActionPerformed(evt);
            }
        });

        calculateButton.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        calculateButton.setForeground(new java.awt.Color(34, 59, 68));
        calculateButton.setText("Calculate");
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });

        calculateButton1.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        calculateButton1.setForeground(new java.awt.Color(34, 59, 68));
        calculateButton1.setText("Choose a Class");
        calculateButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButton1ActionPerformed(evt);
            }
        });

        classSelectedLabel.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        classSelectedLabel.setForeground(new java.awt.Color(0, 153, 0));
        classSelectedLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        metrique8.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        metrique8.setForeground(new java.awt.Color(34, 59, 68));
        metrique8.setText("Variable Naming Coherence");
        metrique8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metrique8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(metrique7, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(metrique1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(calculateButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(metrique5)
                            .addComponent(metrique3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(158, 158, 158)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(metrique4, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(metrique2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(metrique6)
                            .addComponent(calculateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(metrique8)))
                    .addComponent(classSelectedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 746, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(metrique1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(metrique2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(metrique3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(metrique4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(metrique5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(metrique6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(metrique7, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(metrique8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(classSelectedLabel)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calculateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(calculateButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69))
        );

        javax.swing.GroupLayout panelShadow1Layout = new javax.swing.GroupLayout(panelShadow1);
        panelShadow1.setLayout(panelShadow1Layout);
        panelShadow1Layout.setHorizontalGroup(
            panelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelShadow1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelShadow1Layout.setVerticalGroup(
            panelShadow1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelShadow1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(panelShadow1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelShadow1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void metrique6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metrique6ActionPerformed
        // TODO add your handling code here:
          if (metrique6.isSelected()){choice.add(6);
                    System.out.println(choice);}
                else {choice.remove(6);}
    }//GEN-LAST:event_metrique6ActionPerformed

    private void metrique7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metrique7ActionPerformed
        // TODO add your handling code here:
          if (metrique7.isSelected()){choice.add(7);
                    System.out.println(choice);}
                else {choice.remove(7);}
    }//GEN-LAST:event_metrique7ActionPerformed

    private void metrique4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metrique4ActionPerformed
        // TODO add your handling code here:
         if (metrique4.isSelected()){choice.add(4);
                    System.out.println(choice);}
                else {choice.remove(4);}
    }//GEN-LAST:event_metrique4ActionPerformed

    private void metrique5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metrique5ActionPerformed
        // TODO add your handling code here:
         if (metrique5.isSelected()){choice.add(5);
                    System.out.println(choice);}
                else {choice.remove(5);}
        
    }//GEN-LAST:event_metrique5ActionPerformed

    private void metrique3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metrique3ActionPerformed
        // TODO add your handling code here:
         if (metrique3.isSelected()){choice.add(3);
                    System.out.println(choice);}
                else {choice.remove(3);}
    }//GEN-LAST:event_metrique3ActionPerformed

    private void metrique2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metrique2ActionPerformed
        // TODO add your handling code here:
         if (metrique2.isSelected()){choice.add(2);
                    System.out.println(choice);}
                else {choice.remove(2);}
    }//GEN-LAST:event_metrique2ActionPerformed

    private void metrique1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metrique1ActionPerformed
        // TODO add your handling code here: if (metrique1.isSelected()){choice.add(1);
                if (metrique1.isSelected()){choice.add(1);
                    System.out.println(choice);}
                else {choice.remove(1);}
    }//GEN-LAST:event_metrique1ActionPerformed

    private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtonActionPerformed
        // TODO add your handling code here:
        t=new Test();
                t.setVisible(true);
                t.setTitle(f.getName());
                t.Clear();
        s="For the class "+ f.getName() +" :\n";
                if(choice.contains(1)) {
                    handledExceptions hd = new handledExceptions("a name");
                   
                    t.setData("NHE",hd.calculate(f.getAbsolutePath()));
                }
                if(choice.contains(2)){
                    NumberOfImportedClasses nic=new NumberOfImportedClasses("a name");
                  
                         t.setData("NIC",nic.calculate(f.getAbsolutePath()));
                }
                if(choice.contains(3)){
                    NumberOfImportedClassesUsed nicu=new NumberOfImportedClassesUsed("a name");
                   
                          t.setData("NEIC",nicu.calculate(f.getAbsolutePath()));
                }
                if(choice.contains(4)){
                    NumberOfInterfacesImplemented noii=new NumberOfInterfacesImplemented("a name");
                   
                      t.setData("NII",noii.calculate(f.getAbsolutePath()));
                }
                if(choice.contains(5)) {
                    numberOfUsedMethodsFromImports noumi = new numberOfUsedMethodsFromImports("a name");
                   
                      t.setData("NUIM",noumi.calculate(f.getAbsolutePath()));
                }

                if(choice.contains(6)){
                    NumberOfInstantiableVariable niv=new NumberOfInstantiableVariable("a name");
                   
                      t.setData("NIV",niv.calculate(f.getAbsolutePath()));
                }
                if(choice.contains(7)){
                    NumberOfExternalImports wic=new NumberOfExternalImports("a name");
                   
                      t.setData("NXI",wic.calculate(f.getAbsolutePath()));
                }
                if(choice.contains(8)){
                VariableNamingCoherence vr= new VariableNamingCoherence("a name");
                t.setData("VNC",vr.calculate(f.getAbsolutePath())*100);
                System.out.println(vr.calculate(f.getAbsolutePath())*100);
         }
            t.Start();
              
            
    }//GEN-LAST:event_calculateButtonActionPerformed

    private void calculateButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButton1ActionPerformed
        // TODO add your handling code here:
           jf = new JFileChooser();
                jf.setAcceptAllFileFilterUsed(false);
                FileNameExtensionFilter restrict = new FileNameExtensionFilter("Only .java files", "java");

                jf.addChoosableFileFilter(restrict);

                jf.showOpenDialog(null);
                 f = jf.getSelectedFile();
                classSelectedLabel.setText(f.getName());

                System.out.println("File Choosen is: " + f.getName());
                System.out.println("File Choosen is: " + f.getAbsolutePath());
    }//GEN-LAST:event_calculateButton1ActionPerformed

    private void metrique8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metrique8ActionPerformed
        if (metrique8.isSelected()){choice.add(8);
                    System.out.println(choice);}
                else {choice.remove(8);}
    }//GEN-LAST:event_metrique8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calculateButton;
    private javax.swing.JButton calculateButton1;
    private javax.swing.JLabel classSelectedLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton metrique1;
    private javax.swing.JRadioButton metrique2;
    private javax.swing.JRadioButton metrique3;
    private javax.swing.JRadioButton metrique4;
    private javax.swing.JRadioButton metrique5;
    private javax.swing.JRadioButton metrique6;
    private javax.swing.JRadioButton metrique7;
    private javax.swing.JRadioButton metrique8;
    private raven.panel.PanelShadow panelShadow1;
    // End of variables declaration//GEN-END:variables
}
